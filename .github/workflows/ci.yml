on:
  # Those checks only run against code changes
  - push

name: Continuous integration

env:
  MSRV: 1.84.0
  CARGO_TERM_COLOR: always
  # Useful for cargo insta
  CI: true

jobs:
  check:
    name: Check
    runs-on: ubuntu-24.04
    steps:
      - uses: actions/checkout@v3
      - uses: actions-rs/toolchain@v1
        with:
          profile: minimal
          toolchain: stable
          override: true
      - uses: actions-rs/cargo@v1
        with:
          command: check
          args: --locked

  test_features_matrix:
    name: Cargo test
    strategy:
      matrix:
        args:
        - ""
        - "--all-features"
        - "--features alpha-async-tokio-rusqlite"
        - "--features from-directory"
    runs-on: ubuntu-24.04
    steps:
      - uses: actions/checkout@v3
      - name: Install libsqlite
        run: sudo apt-get install -y libsqlite3-dev
      - uses: actions-rs/toolchain@v1
        with:
          profile: minimal
          toolchain: stable
          override: true
      - uses: actions-rs/cargo@v1
        with:
          command: test
          args: --locked ${{ matrix.args }}

  min_rust_version:
    name: Check with minimal Rust version
    runs-on: ubuntu-24.04
    steps:
      - uses: actions/checkout@v3
      - name: Install libsqlite
        run: sudo apt-get install -y libsqlite3-dev
      - uses: actions-rs/toolchain@v1
        with:
          profile: minimal
          toolchain: ${{ env.MSRV }}
          override: true
      - uses: actions-rs/cargo@v1
        with:
          command: test
          args: --locked

  doc:
    name: Documentation
    runs-on: ubuntu-24.04
    steps:
      - uses: actions/checkout@v3
      - uses: actions-rs/toolchain@v1
        with:
          profile: minimal
          toolchain: stable
      - run: RUSTDOCFLAGS="-D warnings" cargo --locked doc --all-features --no-deps --lib

  fmt:
    name: Rustfmt
    runs-on: ubuntu-24.04
    steps:
      - uses: actions/checkout@v3
      - uses: actions-rs/toolchain@v1
        with:
          profile: minimal
          toolchain: stable
          override: true
      - run: rustup component add rustfmt
      - uses: actions-rs/cargo@v1
        with:
          command: fmt
          args: --all -- --check

  mutation-tests:
    name: Mutation tests
    runs-on: ubuntu-24.04
    strategy:
      matrix:
        shard: [0, 1, 2, 3]
    steps:
      - uses: actions/checkout@v3
      - name: Install libsqlite
        run: sudo apt-get install -y libsqlite3-dev
      - uses: actions-rs/toolchain@v1
        with:
          profile: minimal
          toolchain: stable
          override: true
      - uses: Swatinem/rust-cache@v2
      - run: cargo install --locked cargo-mutants
      - uses: actions-rs/cargo@v1
        with:
          command: mutants
          args: -p rusqlite_migration --colors=always --no-shuffle -vV --shard ${{ matrix.shard }}/4
      - name: Archive results
        uses: actions/upload-artifact@v3
        if: failure()
        with:
          name: mutation-report
          path: mutants.out

  clippy_all:
    name: Clippy (all code)
    runs-on: ubuntu-24.04
    steps:
      - uses: actions/checkout@v3
      - uses: actions-rs/toolchain@v1
        with:
          profile: minimal
          toolchain: stable
          override: true
      - uses: Swatinem/rust-cache@v2
      - run: rustup component add clippy
      - uses: actions-rs/cargo@v1
        with:
          command: clippy
          args: --locked --all-features -- -D warnings

  clippy_main:
    name: Clippy (main package)
    runs-on: ubuntu-24.04
    steps:
      - uses: actions/checkout@v3
      - uses: actions-rs/toolchain@v1
        with:
          profile: minimal
          toolchain: stable
          override: true
      - uses: Swatinem/rust-cache@v2
      - run: rustup component add clippy
      - uses: actions-rs/cargo@v1
        with:
          command: clippy
          # More stringent requirements
          args: --locked --all-features -p rusqlite_migration -- -D warnings -D clippy::missing_errors_doc -D clippy::missing_panics_doc -D clippy::doc_link_with_quotes -D clippy::doc_markdown

  coverage:
    name: Code coverage
    runs-on: ubuntu-24.04
    steps:
      - uses: actions/checkout@v3
      - name: Install libsqlite
        run: sudo apt-get install -y libsqlite3-dev
      - uses: actions-rs/toolchain@v1
        with:
          profile: minimal
          toolchain: stable
          override: true
      - uses: Swatinem/rust-cache@v2
      - run: cargo install --locked cargo-tarpaulin
      - name: Generate code coverage
        uses: actions-rs/cargo@v1
        with:
          command: tarpaulin
          args: --locked --all-features --run-types AllTargets --workspace --timeout 120 --out Lcov --exclude-files '**/benches/*'
      - name: Upload coverage to Coveralls
        uses: coverallsapp/github-action@v1
        with:
          github-token: ${{ secrets.GITHUB_TOKEN }}
          path-to-lcov: lcov.info
